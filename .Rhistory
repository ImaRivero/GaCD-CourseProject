download.file(url, "./data/UCIdata.zip")
# Getting the data
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url, "./data/UCIdata.zip")
unzip("./data/UCIdata.zip")
?unzip
unzip("./data/UCIdata.zip")
# Load data
act_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
col.names = c("classLabel", "actName"))
head(act_labels)
features <- read.table("UCI HAR Dataset/features.txt",
col.names = c("index", "featureName"))
filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"])
head(filtered_features)
filtered_features <- features[index_filtered_features, "featureName"]
index_filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"])
filtered_features <- features[index_filtered_features, "featureName"]
head(filtered_features)
?grep
index_filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"], value = TRUE)
head(index_filtered_features)
filtered_features <- features[index_filtered_features, "featureName"]
filtered_features <- gsub("[()]", "", filtered_features)
head(filtered_features)
filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"], value = TRUE)
head(filtered_features)
filtered_features <- gsub("[()]", "", filtered_features)
head(filtered_features)
# Load train data
train <- read.table("UCI HAR Dataset/train/X_train.txt")
head(train)
# Load train data
train <- read.table("UCI HAR Dataset/train/X_train.txt")[, filtered_features, with = FALSE]
head(filtered_features)
trainActivities <- read.table("UCI HAR Dataset/train/Y_train.txt")
ncol(trainActivities)
ncol(train)
head(trainActivities)
act_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
col.names = c("classLabel", "actName"))
features <- read.table("UCI HAR Dataset/features.txt",
col.names = c("index", "featureName"))
filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"], value = TRUE)
filtered_features <- gsub("[()]", "", filtered_features) # remove parentheses
# Load train data
train <- read.table("UCI HAR Dataset/train/X_train.txt")
trainActivities <- read.table("UCI HAR Dataset/train/Y_train.txt",
col.names = c("Activity"))
trainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt",
col.names = c("Subject"))
train <- cbind(trainSubjects, trainActivities, train)
# Load test data
test <- read.table("UCI HAR Dataset/test/X_test.txt")
testActivities <- read.table("UCI HAR Dataset/test/Y_test.txt",
col.names = c("Activity"))
testSubject <- read.table("UCI HAR Dataset/test/subject_test.txt",
col.names = c("Subject"))
test <- cbind(testActivities, testSubject, test)
head(test)
colnames(train)
# Packages
require(data.table)
# Packages
install.packages(data.table)
# Packages
install.packages('data.table')
library(data.table)
setnames(train, colnames(train), filtered_features)
measurements <- features[filtered_features, "featureName"]
index_features <- grep("(mean|std)\\(\\)", features[, "featureName"])
measurements <- features[index_features, "featureName"]
View(test)
index_features
library(dplyr)
rm(list = ls())
act_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
col.names = c("classLabel", "actName"))
features <- read.table("UCI HAR Dataset/features.txt",
col.names = c("index", "featureName"))
#filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"], value = TRUE)
index_features <- grep("(mean|std)\\(\\)", features[, "featureName"])
measurements <- features[index_features, "featureName"]
measurements <- gsub("[()]", "", measurements) # remove parentheses
# Load train data
train <- read.table("UCI HAR Dataset/train/X_train.txt")
train <- select(train, index_features)
setnames(train, colnames(train), measurements)
names(train)
trainActivities <- read.table("UCI HAR Dataset/train/Y_train.txt",
col.names = c("Activity"))
trainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt",
col.names = c("Subject"))
train <- cbind(trainSubjects, trainActivities, train)
# Load test data
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- select(train, index_features) # selecting only the columns that we want
# Load test data
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- select(test, index_features) # selecting only the columns that we want
testActivities <- read.table("UCI HAR Dataset/test/Y_test.txt",
col.names = c("Activity"))
testSubject <- read.table("UCI HAR Dataset/test/subject_test.txt",
col.names = c("Subject"))
test <- cbind(testActivities, testSubject, test)
# Merge data
mergeDataset <- rbind(train, test)
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- select(test, index_features) # selecting only the columns that we want
setnames(test, colnames(test), measurements)
testActivities <- read.table("UCI HAR Dataset/test/Y_test.txt",
col.names = c("Activity"))
testSubject <- read.table("UCI HAR Dataset/test/subject_test.txt",
col.names = c("Subject"))
test <- cbind(testActivities, testSubject, test)
# Merge data
mergeDataset <- rbind(train, test)
rm(list = mergeDataset)
# Merge datasets
completeDataset <- rbind(train, test)
head(completeDataset)
head(select(completeDataset, c(1,2,3)), 10)
head(select(completeDataset, c(1,2,3)), 50)
# The second independent dataset
colNames <- colnames(completeDataset)
mean_and_std = (grepl("Activity" , colNames) | grepl("subject" , colNames) |
grepl("mean.." , colNames) | grepl("std.." , colNames))
select(mean_and_std, c(1,2))
head(mean_and_std)
library(reshape2)
?melt
# The second independent dataset
secondDF <- reshape2::melt(data = completeDataset, id = c("Subject", "Activity"))
secondDF <- reshape2::dcast(data = secondDF, SubjectNum + Activity ~ variable, fun.aggregate = mean)
secondDF <- reshape2::dcast(data = secondDF, Subject + Activity ~ variable, fun.aggregate = mean)
head(secondDF)
rm(list = ls())
# Load labels and features
act_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
col.names = c("classLabel", "actName"))
features <- read.table("UCI HAR Dataset/features.txt",
col.names = c("index", "featureName"))
#filtered_features <- grep("(mean|std)\\(\\)", features[, "featureName"], value = TRUE)
index_features <- grep("(mean|std)\\(\\)", features[, "featureName"])
measurements <- features[index_features, "featureName"]
measurements <- gsub("[()]", "", measurements) # remove parentheses
# Load train data
train <- read.table("UCI HAR Dataset/train/X_train.txt")
train <- select(train, index_features) # selecting only the columns that we want
setnames(train, colnames(train), measurements)
trainActivities <- read.table("UCI HAR Dataset/train/Y_train.txt",
col.names = c("Activity"))
trainSubjects <- read.table("UCI HAR Dataset/train/subject_train.txt",
col.names = c("Subject"))
train <- cbind(trainSubjects, trainActivities, train) # Binding all training columns
# Load test data
test <- read.table("UCI HAR Dataset/test/X_test.txt")
test <- select(test, index_features) # selecting only the columns that we want
setnames(test, colnames(test), measurements)
testActivities <- read.table("UCI HAR Dataset/test/Y_test.txt",
col.names = c("Activity"))
testSubject <- read.table("UCI HAR Dataset/test/subject_test.txt",
col.names = c("Subject"))
test <- cbind(testActivities, testSubject, test)
# Merge datasets
completeDataset <- rbind(train, test)
# The second independent dataset
secondDF <- reshape2::melt(data = completeDataset, id = c("Subject", "Activity"))
secondDF <- reshape2::dcast(data = secondDF, Subject + Activity ~ variable, fun.aggregate = mean)
# Writing results to files of the tidy datasets
write.csv(completeDataset, "tidyDataset.csv")
write.csv(secondDF, "tidyDataset_second.csv")
View(secondDF)
?dcast
